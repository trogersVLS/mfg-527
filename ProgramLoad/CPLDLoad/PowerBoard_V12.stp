NOTE "CREATOR" "Designer Version: 9.1.5.1";
NOTE "CAPTURE" "9.1.5.1";
NOTE "DEVICE" "AGLN020V2";
NOTE "PACKAGE" "AGLN020V2-qn68";
NOTE "DATE" "2018/09/06";
NOTE "TIME" "09:32:18";
NOTE "STAPL_VERSION" "JESD71";
NOTE "VENDOR" "Actel Corporation";
NOTE "IDCODE" "069081CF";
NOTE "IDMASK" "07FFFFFF";
NOTE "DESIGN" "PowerBoard";
NOTE "DESIGN_DIRECTORY" "C:\Actelprj\PowerBoard\designer\impl1\";
NOTE "CHECKSUM" "1002";
NOTE "SECURITY" "Disable";
NOTE "ALG_VERSION" "20";
NOTE "MAP_VERSION" "1";
NOTE "TOOL_VERSION" "1";
NOTE "MAX_FREQ" "10000000";
NOTE "SILSIG" "00000000";
NOTE "SPEED_GRAD" "STD";
NOTE "TEMP_GRAD" "COM";
NOTE "PLAYER_VERSION_VARIABLE" "PLAYERVERSIONVARIABLE";
NOTE "PLAYER_VERSION_SW_VARIABLE" "PLAYERVERSIONSWVARIABLE";

ACTION PROGRAM = 
       VERIFY_IDCODE,
       SET_PRG_ARRAY,
       W_INITIALIZE,
       DO_ERASE,
       DO_PROGRAM,
       DO_VERIFY_BOL,
       DO_PROGRAM_RLOCK,
       DO_VERIFY_PGM_RLOCK,
       DO_EXIT;
ACTION PROGRAM_ARRAY = 
       VERIFY_IDCODE,
       SET_PRG_ARRAY,
       AW_INITIALIZE,
       DO_ERASE_ARRAY,
       DO_PROGRAM,
       DO_VERIFY_BOL,
       DO_PROGRAM_RLOCK,
       DO_VERIFY_PGM_RLOCK,
       DO_EXIT;
ACTION ERASE_ARRAY = 
       VERIFY_IDCODE,
       AW_INITIALIZE,
       DO_ERASE_ARRAY_ONLY,
       DO_EXIT;
ACTION ERASE = 
       VERIFY_IDCODE,
       W_INITIALIZE,
       DO_ERASE_ONLY,
       DO_EXIT;
ACTION ERASE_ALL = 
       VERIFY_IDCODE,
       INITIALIZE,
       DO_ERASE_ALL,
       DO_EXIT;
ACTION VERIFY = 
       VERIFY_IDCODE,
       R_INITIALIZE,
       DO_VERIFY_EOL,
       DO_VERIFY_RLOCK,
       DO_EXIT;
ACTION VERIFY_ARRAY = 
       VERIFY_IDCODE,
       AR_INITIALIZE,
       DO_VERIFY_EOL,
       DO_VERIFY_RLOCK,
       DO_EXIT;
ACTION READ_IDCODE = 
       DO_READ_IDCODE;
ACTION VERIFY_DEVICE_INFO = 
       VERIFY_IDCODE,
       READ_INITIALIZE,
       READ_IDCODE_ONLY,
       DO_VERIFY_DEVICE_INFO,
       DO_EXIT;
ACTION DEVICE_INFO = 
       VERIFY_IDCODE,
       READ_INITIALIZE,
       READ_IDCODE_ONLY,
       DO_DEVICE_INFO,
       DO_QUERY_SECURITY,
       DO_EXIT;



DATA CONSTBLOCK;
    INTEGER IEEE1532=0;
    INTEGER STAPL=1;
    INTEGER DIRECTC=2;
    INTEGER PDB=3;
    INTEGER SVF=4;
    INTEGER FP=0;
    INTEGER FPLITE=1;
    INTEGER FP3=2;
    INTEGER SCULPTW=3;
    INTEGER BPW=4;
    INTEGER DIRECTCP=5;
    INTEGER STP=6;
    INTEGER FP4=7;
    INTEGER FP33=0;
    INTEGER FP34=1;
    INTEGER FP40=2;
    INTEGER FP41=3;
    INTEGER FP42=4;
    INTEGER FP50=5;
    INTEGER FP51=6;
    INTEGER FP60=7;
    INTEGER FP61=8;
    INTEGER FP62=9;
    INTEGER FP84=11;
    INTEGER FP85=12;
    INTEGER FP86=13;
    INTEGER FP90=14;
    INTEGER FP91=15;
    INTEGER UNKNOWN=127;
    INTEGER UNSPECIFIED=0;
    INTEGER QN132=1;
    INTEGER VQ100=2;
    INTEGER TQ144=3;
    INTEGER PQ208=4;
    INTEGER FG144=5;
    INTEGER FG256=6;
    INTEGER FG484=7;
    INTEGER FG676=8;
    INTEGER FG896=9;
    INTEGER QN108=10;
    INTEGER QN180=11;
    INTEGER TQ100=12;
    INTEGER CQ208=13;
    INTEGER FG1152=14;
    INTEGER BG456=15;
    INTEGER UNDEFINED=63;
    INTEGER GRADE_UNSPEC=0;
    INTEGER GRADE_1=1;
    INTEGER GRADE_2=2;
    INTEGER GRADE_3=3;
    INTEGER GRADE_F=4;
    INTEGER GRADE_STD=5;
    INTEGER GRADE_4=6;
    INTEGER GRADE_UNDEF=7;
ENDDATA;

DATA PARAMETERS;
    INTEGER FREQ =4;
ENDDATA;

DATA GV;
    INTEGER ULOPT1_BITLOCATION =11;
    INTEGER ULOPT0_BITLOCATION =10;
    INTEGER ULUWE_BITLOCATION =9;
    INTEGER ULARE_BITLOCATION =8;
    INTEGER ULUPC_BITLOCATION =7;
    INTEGER ULUFE_BITLOCATION =6;
    INTEGER ULUFP_BITLOCATION =5;
    INTEGER ULUFJ_BITLOCATION =4;
    INTEGER ULFLR_BITLOCATION =3;
    INTEGER ULULR_BITLOCATION =2;
    INTEGER ULAWE_BITLOCATION =1;
    INTEGER ULARD_BITLOCATION =0;
    BOOLEAN BUFF128[128];
    BOOLEAN BUFF32[32];
    INTEGER I;
    INTEGER J;
    INTEGER TEMP;
    INTEGER SDNUMBER;
    INTEGER ROWNUMBER;
    INTEGER DATAINDEX =0;
    INTEGER FROMROWNUMBER =1;
    INTEGER AESBLOCK;
    BOOLEAN ID[32];
    BOOLEAN PASS = 1;
    BOOLEAN FADDR[3];
    INTEGER STATUS =0;
    BOOLEAN SILSIG[32] = $00000000;
    BOOLEAN ISC_CONFIG_RESULT[18];
    BOOLEAN VERIFYEOL[2];
    BOOLEAN COMBERASESELECT[23];
    BOOLEAN SECKEY_OK = 1;
    BOOLEAN SECREG[44];
    BOOLEAN ULUWE = 0;
    BOOLEAN ULARE = 0;
    BOOLEAN ULUPC = 0;
    BOOLEAN ULUFE = 0;
    BOOLEAN ULUFP = 0;
    BOOLEAN ULUFJ = 0;
    BOOLEAN ULFLR = 0;
    BOOLEAN ULULR = 0;
    BOOLEAN ULAWE = 0;
    BOOLEAN ULARD = 0;
    BOOLEAN ULOPT[2];
    BOOLEAN SUROWCHECKSUM[16];
    INTEGER SUROWCYCLECOUNT =0;
    INTEGER ACT_UROW_CYCLE_COUNT =0;
    BOOLEAN ACT_UROW_DESIGN_NAME[70] = $02fbef4d3a1f70d393;
    BOOLEAN SUROWDESIGNNAME[70];
    BOOLEAN SUROWPROGMETHOD[3];
    BOOLEAN ACT_UROW_ALGO_VERSION[7] = $14;
    BOOLEAN SUROWALGOVERSION[7];
    BOOLEAN SUROW_PKG_TYPE[6];
    BOOLEAN ACT_UROW_SW_VERSION[7];
    BOOLEAN SUROW_SW_VERSION[7];
    INTEGER PLAYERVERSIONVARIABLE =0;
    INTEGER PLAYERVERSIONSWVARIABLE =0;
    INTEGER SCULPTORMAJORBASE =5;
    INTEGER SCULPTORMINORBASE =16;
    BOOLEAN ACT_UROW_PROGRAM_SW[4];
    BOOLEAN SUROWPROGRAMSW[4];
    BOOLEAN SUROW_SPEED_GRADE[3];
    BOOLEAN SUROW_SRAM_DISTURB[1];
    BOOLEAN ISERASEONLY = 0;
    BOOLEAN ISRESTOREDESIGN = 0;
    BOOLEAN FLAGDISPLAYCYC = 1;
    BOOLEAN ISPRGARRAY = 0;
    BOOLEAN BSRPATTERN[351] = $4924924924924924924924924924924924924924924924924
        924924924924924924924924924924924924924;
    BOOLEAN SAMPLEMASK[351] = $0000000000000000000000000000000000000000000000000
        000000000000000000000000000000000000000;
    BOOLEAN BSR[351];
    BOOLEAN SAMPLE_DEVICE[351];
    BOOLEAN RLOCK[416] = $7fffffcffffffbfffffeffffffbfffffefffffffffffffffffff3f
        ffffcffffff3fffffcffffff3fffffdffffff3fffffdffffff;
    BOOLEAN ARRAYRONLY = 1;
    BOOLEAN CHKARRAY = 0;
    BOOLEAN FROMRONLY = 1;
    BOOLEAN CHKFROM = 0;
    BOOLEAN CHKNVM = 0;
    BOOLEAN CHKSEC = 1;
    BOOLEAN PERMLOCK = 0;
    INTEGER HEX[16] = 70,69,68,67,66,65,57,56,55,54,53,52,51,50,49,48;
    INTEGER NUMBEROFFROMROWS =8;
    BOOLEAN INITIALIZE_DATA[5] = $00;
    INTEGER SDTILE;
    INTEGER NUMBEROFSDTILES =2;
    INTEGER NUMBEROFMAPROWS =401;
    INTEGER IDREV;
    INTEGER IDFAB;
    INTEGER BM7DEVICE =0;
    INTEGER BM1DEVICE =0;
    BOOLEAN M1BUFF[128] = $acdd6548ccb488863e291eb18fe95077;
    BOOLEAN M7BUFF[128] = $e137623a2eeee91126015f3f73664945;
    BOOLEAN IDCODEVALUE[32] = $069081cf;
    BOOLEAN IDMASK[32] = $07ffffff;
    INTEGER SECKEYCHK =0;
    INTEGER DESIGNPKGTYPE =0;
    BOOLEAN ACT_UROW_PROG_METHOD[3] = $1;
    INTEGER LABEL_SEPARATOR =0;
    INTEGER ROWITERATION =100;
    INTEGER PAGEITERATION =100;
    INTEGER PERCENT_UPDATE;
    INTEGER DIFFERENCE;
    INTEGER UNIQUEEXITCODE =0;
ENDDATA;

DATA ECCCHECK;
    INTEGER SYNDROMETABLE[256] = -1,97,98,-1,99,-1,-1,100,101,-1,-1,31,-1,102,30
        ,-1,103,-1,-1,29,-1,28,27,-1,-1,26,25,-1,24,-1,-1,104,105,-1,-1,7,-1,6,5
        ,-1,
    -1,4,3,-1,2,-1,-1,106,-1,0,107,-1,1,-1,-1,108,109,-1,-1,110,-1,111,112,-1,86
        ,-1,-1,87,-1,88,89,-1,-1,90,47,-1,91,-1,-1,46,
    -1,92,45,-1,44,-1,-1,43,42,-1,-1,41,-1,40,93,-1,-1,64,55,-1,54,-1,-1,53,52,-1
        ,-1,51,-1,50,65,-1,48,-1,-1,66,-1,49,67,-1,
    -1,68,69,-1,70,-1,-1,-1,71,-1,-1,72,-1,73,74,-1,-1,75,63,-1,76,-1,-1,62,-1,77
        ,61,-1,60,-1,-1,59,58,-1,-1,57,-1,56,78,-1,
    -1,79,39,-1,38,-1,-1,37,36,-1,-1,35,-1,34,80,-1,32,-1,-1,81,-1,33,82,-1,-1,83
        ,84,-1,85,-1,-1,-1,-1,113,114,-1,115,-1,-1,116,
    117,-1,-1,15,-1,118,14,-1,119,-1,-1,13,-1,12,11,-1,-1,10,9,-1,8,-1,-1,-1,94,-1
        ,-1,23,-1,22,21,-1,-1,20,19,-1,18,-1,-1,-1,
    -1,16,95,-1,17,-1,-1,-1,96,-1,-1,-1,-1,-1,-1,-99;
    BOOLEAN ECCSTR0[120] = $ad2aadea7554eab4d1b4d14b2e4b2e;
    BOOLEAN ECCSTR1[120] = $eaa2eb5d68bad11557155715571557;
    BOOLEAN ECCSTR2[120] = $a66aa7d4daa9b5a699a699a699a699;
    BOOLEAN ECCSTR3[120] = $9e1a9ed3c6a78d38e338e338e338e3;
    BOOLEAN ECCSTR4[120] = $7e067e4fc19f83c0fcc0fcc0fcc0fc;
    BOOLEAN ECCSTR5[120] = $fe01fe3fc07f80ff00ff00ff00ff00;
    BOOLEAN ECCSTR6[120] = $01fffe003fff80ff0000ffff0000ff;
    BOOLEAN ECCSTR7[120] = $01fffe3fc0007f00ffff00ff0000ff;
    BOOLEAN TEMPECCSTR[120];
    BOOLEAN TEMPECC[8];
    BOOLEAN TEMPPARITY;
    BOOLEAN TEMPDATA[120];
    INTEGER ISMARTERASE;
    INTEGER ISEITERATION =10;
ENDDATA;

DATA BITSTREAM;
    BOOLEAN UROW[128];
    BOOLEAN UROW_MASK[128] = $fffffffffffffffffffffffffe01ffc0;
    BOOLEAN DATASTREAM[166816] = @q5500mHYaKpsRh0SRQ8Rjjw8W8vAkjgj9W4D1shsY1J9i6
        tqiy1aXG0Jpp_K4A8YOlxBAiS22ykk93Ce898IKIo2044G4D909G23A9aaY9919WHJo0381K
        0G77Wai49YDe2Go26aMmWGD30NoD34WB204f181I220mMe0010qPP00J200PK48G100A0HD1
        6C8IWK5OWj00D87AgYH1eWK2JGZ802G2480J4J39H000H1ja4PGI0jGqMa50812GAHIU0GG2
        4gpq41900bA3Ru0845eDaXL048YWG_KDK2s0aGmO9uPpI01ca4S3Q1650IGGEhf44B91eC7p
        b5844nDcJfWm0CufZ1i0Jm0qdL1SC1C0B9JA1eQ1W0ij18e90WnYWG6Ws000OQwKQJ0WGAhW
        YS2oKge8P6C8Jg36C15aKjCP2I0commc2000W1mC2G003G404006W24000C090800O0Me6Oe
        CIW000mLuGJq0GW0W1G1W981c76i080202m9PYIH1DW2I340H8108190004400W0t22W0W0i
        HS8DOGbW02000ZY3090002000W00001900W00P240002U6I88OmbO1G2002000A99aJke5i0
        400X6G1000G00GWM98eyWGse0W000L85Y66aH88Di0012Wq022000c04a6A8iOGE111080d3
        6QORC0c8CqG7uXVO9@lA259KGWWG02mDvWQm1128a4L0240Ws244000aaG0G00GW400X690G
        00CCGXme3E4E0W0Wm3X2HG5iBqmhm1n060110uCeWFX28900CAW0G0WW2a4kX8up0YB25o78
        04008G20Y5d56TG0200GE12XBLO000OHRXa6JkCOeaRYeY7o5E80fXP8Ag58040Wm6r3H3SS
        Aan0m68001QYGOcuW023WW404DymiO32040E380G0WmVH44002cGAP0mXL6A0110iDK0X40W
        E02MPQ0G100084XJ94_LMGIGscja0CH201GKYIaa0409BPH0GIWa4b49GIIaiaa99A1HI2Ic
        aib498H9IIMG4Wai89RBWaaa49999moMI4W0a8999G2GIYaWaS5WWq02GIII2baa41999oII
        Iaeaar048B99H200GXd3vUGyVqImp1f1ba5G0104Wv38I_KOMSaeeQ60GHx02800848fXQ0A
        ytuWJF8C0e0aaia899R1IJIYeWajN11GIcI4aaa8P9PH6aaKsY3GKoIcjW0AA9PPBE099B9G
        I2IWaaa8889J3K0f998III2aa442QqHqdC2DW1PTJRvTjD2ELuDiaz87tW4XKphs719NouVM
        @2AO4qixUUI48HyC@VzHRrH1sarrDebnfmIoZU00W004K9931I00M1a0189PWnPI1W801G02
        1A4Ca40bW1J62GI80268C1OIIIGWmja884CRO20HG4K10040I11HG2000Gi90050040K4a24
        G8K0W88GG88GG1N42142WCI0P0A00b4W0WhLGW0ieJiai022G2qsoM89GU0AB91W00801g5O
        9WWmGaeOPHW2CGKYieB1W12RsYIc0110HR3BXRu38G2I2nWZ5K4G8025V2EYW4fXQ9MIOBW6
        W_mLIJK448OL5B4I2A0ZaaP20e8AOPSeH0m0fcqai4m1G1AHccOIMa2jP0HCG203cf8C4iDW
        1efbi4X9L1mY6Wm2s08H8Xk0I2E62jIRh9HJA0iEnZ@PDKQwW10y4xeZELNKeWWp78qHH110
        01D080404u7W2wOGGN524000aHx0Y400vSEuWr2F1CuXW1022060nmR02ceL0Y000W0010H0
        0Y6S0k00WNQ508208D0198G02000W000G000WG00_pO0051Wr4AW000fQG1WW00000YEaaWC
        5902009yO2zA9uX44Z9X0801m_X3I9GGcA3w1G081WWn1808000110Of0306000W009DW3b2
        I0a1GGQWCQ8bn8W4o4K0221Wl2508G0e0n1@5K08Y0uv250180E6W0W0044WW4oVi1140Wr6
        7yG2XKf50400OUW1J0GO8X1G208tfa0100WS29CB4Xv37CO2XW65y7o10600XGIu2010I00g
        ME1100emHKKHmWN560000WC00Gwm6MHGmD02ENImu13o1K0a0W4A80030E0C00ICW30940Kh
        GXq46yDeWKB509089eL2h08OeG2f0GO@x10I10cAWmh43c4K0010Wu2Di_p000C0x1C8fG1@
        0WuEf4b08emO3f3LO2H1b1SW000040WWvGCi1mW217a2e0W006vV81500GIoBEzYG603cFYm
        gO36RuGOq34W00S3W011003RQ0W0WW000qF0603000100uxX52wSmF3302804Bu02000220W
        S0004xxXY9BiDX10I0092G0140030080G04TAM09198I2IMWDX48OA9HIMII44b491912III
        bi19GYK3Wa0W8911GIIIE4450A9910IJ34aaaG1IIY4ba4f1RBJI00RvA02IIQun4Ox99H0G
        I2a4a499B9o2YIaWWW899PH2II0Wa0mIN6y0c1zGPmB150200G000H44CaJX1tKHHx26ak11
        G0100010Sec2jm8HU244gX38002c5WWfXEu3i2400W4Ua7n4GGsFFiEn15OWmKDBGI208504
        221Xy9G8d9FATn040G0rDmGF25Wqaa4999PUH5igG10IGIoMuWQ0C8l8361W0A9912IoI2Fg
        09D99II2Gaac6K301acSaI3W0qcaa891QqaaW889Gj60288P9HII4YaW4c9h9BIGI2NOy1W9
        0WeDU0G000a4wAPRhfco0DDizr879O6eqsk_4WAKoOBU@YRSc3fPUptGm9PCzPxHA59O_srk
        8mNPhoJtcEIo240G091QO2208ea0jO2BWa427Y441G411A04XW0fXj0KI00O56fOC19I2IO4
        b50800810g2YmYM9m0802QA10HG080090a5WGWaW0WM488q20i800000n30021sY080GW0G0
        25404W0W00044XLD9b5H0Z24aYpi800b2IJGm0W030jD8O1599HbO83H450Keajb3o00WNoI
        M90182ABRKYb5H009XWGsXXHaAH02Ran2IWCFWPmmI00c60XXDLY4cmmG5f58I0WW9qL909e
        20MS4uXW049M415beB8426Gae66a6GJAOOIA04ba5P995470DDGF0DIBa2ijn0898Pnso426
        q4EQRQBJIR8H7HIARxS6G40110Y3qatDAuCH36XmWKkQ0800meB9Cq1211a02W0W43G8@e3k
        _uWG2EuDW6I8u04000ttKmP1802028D04IG318010f1u0G0GWI0EOCd6_@uXF0S8VZ3G400G
        00W8DW20802i4G3x2Gmb17e000OD52020201000H00Gt04i_728000Q7e0190094G0800bq6
        M0e10IQ05C@Y38W000W01a603j8XGtT8CT012o00o92YBGQ8sW42CIYfqCelW3_1GXA0AG00
        4Gka6aKK2G00G6duX7WGuC76AgqWa_Cu3A6cv3XT8Aum5240184FH3L7KmX07yS11n3SW000
        Y80AmG20GC3IKNG1b3OmYD8CM01210Os0eWNFJuHd2IWYX6b8uRX48011m0028FX602a0C00
        355HmiUC01040110IQ05Ko51XBSGQ07iCn1W090000188W08SY60804S4f13sT0600WEVEeU
        X5U4mWD088vA2wE8X8OM8pX6MEw02000A40Wco011000DpaGf06y7m2G100AraX318OWW2kD
        oW1nAuO4J608aO3CeLf2_ApX6TGebW20801C2o2JRLn066q@51F1eGFN5CTG21U0nh860300
        8KW4A8eXgHHOs022ggW45V8I052FA109H9IoIGWiX48011HMGM2ai44290PGIGI4099HoQI0
        ae0499O9II_G4a4b89O1uoMo24WjGvE5GJGIcb4q4499BIK22a4aW89P9HQIG8Gm4OGIIYib
        a49298I2oGjabW@fSm69I4xG2Z4KGV15SJm1n6O0400W7D8ej1A0104aPm1BhO0400WaHAuN
        W50210i401G202otG1G0404000G000SFW1f9PG3CCKJq43WPGhZjaw01f14H0QAyFZ3rKS0A
        W0W81Y8uH2aiiW8999G2I2Yaaa409D90IIIaaaiaff144ba891Pjl018LP93Uy08GIo99XW4
        aaaW79WW40q40500IIg6042Ui10GI2f7CHL95Sl02X6418100a@QkQJwU5A5mheR@H394dIm
        _7hCKXCyOsa_EeAWaoo_zl8WW1O_woc0wZRTl9BHGJ16XbdFxa00WXf90I2GammO28981YII
        2Ym4481X26mB2O190WO341Caa4H4AAaG2G00WaXRRfH28GmH84a48800W08aYG6W20W008G1
        0180011918C100DX0H1WG1WWW08K48CHGc2KA04a2OHH3102HG9COX8RPO20472qDWP320W1
        IQ6b018cGORNo0G42YIHoI2001WGPPR70Xa4_ajjQ0224asMh54Z2ea04C0hL22G4s1WfTfm
        8H2HYW4o84I094scXha898bwYGYG4400T9010I00Gcum1Z002GiGQf1I234a4bH0Cb88ssag
        08Y48ABB10QI8H2eJcU306IWbHRnXHNUo24ju08D9I0Y2McYcMABIc10gA@FCIg01GA00FAl
        nTA8q8m1vGq0104YqVje904ot010430D4IGcI8Si23LPaGZ6EyrQ1n0WmjB4040Gesb9s4eX
        KXF8505gWPYe1eeD620H00KC013FI0a00aY4Ku5f2_08X5tCer04I3uWn18WI002000WxV8u
        Qd4_JmWq0EuTW6Ikz49021NeiGc1C4dj1F2ymoC5SCz1j1W0W01Wc0GugJ3QVm02W103pcGY
        IH8100fEY4gXW2100WfXOmX2DqxK2240G0mW0CA02VyOmdV508W0uJ24g0h0840ercNm457S
        kf1B4SmFH6iYq1r7mW102WhVI8YK4UIuWViRO212000GyZr3tmGWG0WW29W0a0016G0YZ8O0
        2W0Gl1Ayn420910Ixh00080PBK02G0Ye9UeU2402024Nf4d2aGf6F43M376emN0Fq@g83dbH
        B15yOm11KeX020W@2EOEH5oA8XT4OeDr3Am218001n4Mm045080GwN04wU3Xe0GeZK3E88Xe
        0EuZi6caa05G00DAW02W0aucIGI00Gu85itQ2Y020wO@04005rHfGEM4yKL181895III0May
        40919IQ2ICWaa89i0dpX09mIIciaaOPA8bZ310799pnf0IGIsWaa0EpX01988ImI2aaWa899
        P1IIIGuH4GIIH0B9992I2omaR0GIIYiaa094W0TUaHk95q3G2N6amsS743I2G000kMpWU4I8
        he3YVOXa4Ee803gRiW9vFuQK68080Syh6NL0nrulCeL7j3iGIBFa5X1H3SGva7S9W155fWWa
        44D999GIJ2oq41f999vKp0XaaaGhHGIIsIer5WeqaS@H2WaaaKKL1O90IIXCYGhN8qWDc1bW
        10aWIeTgkzsS1R462sMUiH4J3EOhLNJmWh4iThR34KwA_Pjj3BZQLcazafKfaUHsBRq8538u
        Vhx6OB0U08gKc84190G224sWWnS29X1HGWI00W00YI2300aa43PC14M5YX4r41SX8IQ6GWa2
        GG1K00G0340006819G09e800YGWo0m0I0G0028082200CG10GX589e8O02G4a8XC00W0Y2M4
        2WG0O0Y28cGoaW4190MRPqWWW2W9b8Q0021W_05jC22082zabAIoI8qcssf18LGRQ9fW4481
        Xi5O9svW7XCJ8GIWH4I184eCyO58Ya2Wi3f90yn103HRFJ1IG0G2085W000Gd8K12498s1Ku
        O2W6KJqo0OK0K0G9BTGRQIZ9D5189880osYyqM4g56scinc41H2IWrGIKac98M98PHWo4LDe
        DjFnbPyAufTDQFIcJJSOtY9widWI1MO9b8W0W0azG2N8JG705CON1d4yG2V4KKH2D0OWW40m
        xBau402W00WCD01G084g9OXCdFu@04k8Y1W880nOOGQp64CG1020mI4cWW080W400c06WV3I
        Ot336pb001G04440wpW040a8X0GGu07qKc1G2G0YIuXf2COR17sBOXS2E87v2sFi00100440
        014085jq1z9VGwk580WGOMX4kqnWn4JWW00800GfQ0C0X02m_28Ss31f1Km4t5KtG2J0UGn2
        5awG3ty8Hnt402A08xX8_Gn0a4a8jEamta4qBu1v6SmN16yM9173iGKA84502H0SGMZBiBt1
        hKNmvr9iMX2z9W0C08Wl2COuP2YNu0880074Q0801W_qGeR94ABW0G00Hd7S0I20W98C0WA8
        0200ZB2K8pk2E5gWijFGA0G0080WeKRW0m0GoK54G01h6H0W08WQ4M0G00Y400W3bGecx4c4
        _01X0Wr0qmEZ8K6G10500kVY05002PjdmJH7aLG1200050W00881OHf2W0006Sa20i006_8Y
        T9AubA2I3mWXcG0G0Ymb39SwW3hQuGlHOCmW1h8GGT0Aa5G31TkGK8Kaa12v8XHG05KBD13n
        ZGku502488o45EKeWq1E8sF2E3W02900N301W2GWqJBOAW3050W4OG23MLGbb70280uDW2_6
        mWkKO040WGZ494uj305006tAXd5AO102YoWWSn8G4W4mo46O99RHJK2YWaa01319MM22W0ea
        8808HGmIW4e192IIoa0ba8919HJoMWa6W4PP98IG0NW4b4GoIIYaWae9m2818BJGI02sa4K2
        F604WaK199HQ040999pIIG214WaGTIGG00nJe4y2A2H0GG@350102GW00GzRESwI54041o41
        XK7I0W02GIK9CGV1vVgGb064_u1B0GGw84SAI1P5_mj240G00AvXAAVXXm6VOJD3sNmW68GO
        GA2INm0K2G0XrmmsuNa2W313S0090YmnNGMI2I9Z7GQIIYacW4898eO79eTA2e9995U42MII
        Ie4aa4U42oRII5aaWqi9144aa89j8qEL1II2I2Fg0909Af1OWdaa4A9982JIIbbWa4U412W1
        WAo920112fFf19714TFR@4ABZKiacvbp0GRmwcba1G0lu@wMZ6SmM9RsQtbQE0ahDRJaLcj_
        rjt8SsAYQUxcD0mWrGW8W099oO8Jb0488P9fIXH2WbanG08WDa440051C1022YuYc0I00J00
        S0Yi500301PXaIGm442WK2G0123G0G0015eK52104X000808D08H0090G0GK8G0W8H2004H8
        0W2e423W08I800HGiSQO14048gjUj0GGG0cocM1000KA8Tq2P1maQPpIY041Xa5PRd0W0Wpa
        Pa9WG02mQoq2tION452605T550029aM7c0W8010tUrIWc8408WKa2808nMkPGWW400fByBGG
        8J0bSd0B894Ga91eX5D38scCKma0j03JagG3scDDQA299HR08OR9TAQ3GejfG198FRIs4j86
        q49QHK4M2WqM0eLQFgcEZ10C9w46_twYtKcuW45szyWvuuuL05oLA2a0000000JAEX_dF8IZ
        46BYWd0Cu135E9p00080X7LW0008I000f1WGGsASBG1jbHmdF8y15811W001GY4YI8D056_Q
        XS2G8yw2ED5X06JO002O0W14Q01fVHGqZ5iXa13namq17apc2HDlmp95840GA7W5I3OXcDE8
        J1AoP2XjrsObW2EP0Xm6MepjA220180e0d0WG9r4ScW3fAqmkH5a9G4jLt0000mNnRekw2sz
        aWj0Ie602gNkWY9JukJ5YoQXQjWuak204204VH1xwKGlG7aN13W200o3WY4BCebg30480a6W
        2W0002D0YfiCOY052RaWUkO0Y20Gf28q8G1K200Yau08802h4RGO05eW00eb85_1WWoNg022
        mmJ1C4f039VGHFJDa1BAjSbmgt6SdG1FnVGc4Ci@G3G002_6TX5l9O737kWyW60E8SH2Y6WW
        0c8uuS4kpmWOD8e4W244014Gg4JxKW000amZC8up3oxnW63UG020mu17yzW20IG0IsvWu780
        210mGJG0208unK5gkcWxCU0440000X599H9MMIGaia4899P9ge2GIGOWzaa539GY40e41992
        oJI6aai4B519XIIo2Wqa4G998IWba89111IGIEpH22JkWc090R9992GW4991922IGWbaC819
        9AGm203GIYaeaCGG3EKvY3xD8wXAW0GG4QH4XPSGSP7G0G0uLS6gXGXXlOO7z3A3WWd7K0W0
        0GNL8i0X5LZOnJlKqZR8lfgmG0GCs03poTmpL5800181Y2GIIJYaeaeWQ3oMe0oIIG1FgWia
        4599931FM0oKoomZAWiiaGZZ5a6031FQ0989XE08GGIWIQ0400oIYaafK8L583999e12MKeW
        r3gO7p4w2f1W41IiCRFPAi5XXYsbRFO251XMrtpOEChXPUswW0KZMwMsh09XB9V@B_aLWOQd
        zPjjW603oYybHGba4A6jD10IG3YW2Y10H99WGOG0WbeCC11GWi411k61GJaa1611W380s02H
        0Gbc819fGOAKaGm02X44001gGW0O0Iaa5KI49m6A4Kd01oMG0SGI0011W0e8G80W24004W8W
        QN920IYW001G2MhmoI200GW8BRRW4WD1j54CN12aXDj014WK5jf450I2GY0qe3900IP3oIY4
        480jDhRXGxc30OGGmiyq08110G0t922Wc6nhB9GIO01WjbnCH1GaWbh4BfCB8m0idP5W58Dg
        37m00W04c4sSqMaa0QHBHGIQ34981DeD40WsKDWeKeT42aXj4gfDG3aaoWMsK6BIOVOQP3W0
        4DPBDfLA00GmNBqSY3bdFHSr6bKg7rSqWG10eL0MOEWDwWeXLyKe104__mXE0AOHP68009Cw
        718000Ebn024W0D1Om9C6q1m1W402UtzWvDY81gEw2eXK5K8DW2Y8nYf3M84P2W008aS03W0
        00sCcWXSJ0100GG04imo1xsLmlT40H000G00JQ0BKHY1f18HNC4iJm255SGD1CSwz2nsumqQ
        4itt4DQTHA04KGG2nMV0440Wq0iek046i@0W018bxGH6X5SGG3L6Tmi14a7P180G1Ut3X2a8
        8qM6c7y10880BiiGOS40010PSI4I_yWfHJe5d5A9SYQZC8hH2k161G200G2W0o7TYs0E0W00
        HskISSn4dRR0004o52Cu4Z6A2eWXlCOQR4IImWq1E0i00mkmCy9s1VDgGepEKRK5RyjmE0AK
        EW1r5aHI1DScD4@7OGkO4i7X2rqmGA4DSm91Z3WGh6A8200eGL4UP0XpDM0211mD05au12t0
        K0I00YOtFuzx2I30XS5EewDD6UbWAncej04MWiWRBFue32cr1120G5LLKmA6EmqCWK9999GI
        I20aWa899fG2IGYaWW4D998IIW419P1IIIKX5a489993I2G0bCWC1991oIIIi09PHIIIWaYa
        499eZATA0I2HIOo50a48PH0289APHI2IWWab499H9IGIGaaai0999qnG5ZgkmhAPCCM4FYV0
        424042G2bEq0200eF2D8u13gZfaMH881THkOuYv0s8qWB2ibXZ7Y82Y22p3YpY80WWa4998f
        ym90989Per60a4efdA288A95Qj1ab4bofs0MII2j6PGuHC0aWaS2022jU1899PIIMI8Waa4Q
        j2W0443DWapDK09cX0sktF3eNGOsI_iGJOg0iPLo200A0iVBx39eQ1tmhT33P48ctyzgMTq0
        PNUpKyZcaOjBJ393GKO2W2Wj0OAGe603G4aiagAj6HIYM00e20I22KWEmM1191H4GA4a0448
        f15IK2HaaAq4XP2GfI20W02084P0188101GD0W4W8A0HYG2HYG2124CG00480BMf0A1O3000
        GK0Gi390G000a0AY459AG04aWyi8D01028nMs4409G8FPJ8A1024PP9I1000bbiCfMIG5KoM
        aj1AGIGRnsI_3qhIcYa24eHpWC4g1ipio290144_Wh4W4GCWnwsa44O58JvoKG25aG1SGH90
        I0HK7GD0A08fD8540iXCXKc0CsaoCPRRK40QWq0jH18jeJBWPBBQ8EJSLibjDA1jHGas06Xc
        6KPBR0cQ0Jl2fWMZigWhLge8Xr9AuCQ3g5qX_UL8Au3k9x000C071KW22IW7080I40GTOF46
        F29bSG4q7a2W1W410E5e0W004h7PG20402008D02A2W024G051G0a48WgLGW000PQ074OW4H
        pSmptb4FG2b0m0e40WS2M86k3Uk8XT0C0G00mFt5SSG1xuWGd27K023200W_OWXq0K8ye5I3
        GYXceuB02wHWWt6cO_k4cBWXug9e6f7a040CWA1fqM0201W70AupW3kZ9XR1I8k05EJO18K0
        03usmj08G0W0GG0W0080WD08e103o4m04080dBqmBD9KEG1jNi0400WgJM8l04AtzX0BmG00
        2G3G9aGj4@1SmSvCia1BP4OG8w9S3p2ti8nZ3KaBy1rmdGQ0I43J5vHnmG09CO83jsiGNDLa
        2W1RSomJPRyIW23PqGN1G4DW2j9C1200aP0C8Mz3oM0YzZD002GmUV5a9z1r0O0CGeWAHI0W
        40KU54W1W1eZW3UBW00X00rTyGW67KR68R3GmR68iJX1jk2100WW7TA8772aba4OAf1C3G28
        G99HoII0B110MIIIeWca0899nMIm20aaKB18BIoMIaa19GIoIIM_0IImMaa40QpX0bWaarFM
        W22Ip4UMW4a44P99BIGI2@hN0040W65A0980GHqC8WG00042GP25yqW5PDUGer6Kn02rlTmk
        154Hc15KfGbY7iQd73fCoVCS0800O4U760e1K2029WkGzAJC8i3t9LGuc44Uq48D99pMW089
        99IMII2j_0II22v5LGEr58899BNA22j_04a09X7f08D9vmZMe_H3Im619999K0II2FIXyAx8
        y8A0IIM2GIIY09Oh6899IWaa83aa89GIgi5IYaam0Wa020a482GI2H0II818P19099W0e414
        0a809j9Q89HIWaCZf20fjD0899HWaoY4aa4940qif4W89G0ma220a4e0GB110I2a009X8099
        0j9fHeD9DXsc49qcci1RIa6OJYsWjHI2iDQRf1GIID0IQm40j1g0iDm0ma0M0s4G3GR6Q0Qr
        00000GIpc0000089JJ20000Wej91SmD1C910000a0eD1OX120950CyB1e50000G2Wa40HII6
        820I099918109Waaa0a0W4GIIY4I2IaG0Ga82004814Q014818H29010W009140890DRRB00
        91WijjD0Wa00sss60GI00RRRM0010G3Gp601G2W50RB0000n2Wj500WaG3Ws68yC2KIIGWsM
        64R9980PR2aaai80jjM7W0WiDDi0aaWCfDPs0oYWcacCA0AI0I2a650OR08H9p01IIMC99B2
        1891ija4Waa40sIIcGIIY4QB9I00Ga8h4HI00GGY4Y9hX009j2Ib4G000459s2G0IIQvA20I
        I0HoII00899C999Y0a48caa81Wa08aa499I2a4JJaa88I00eHII789B949991jba4iaaa0sI
        IiKIIY4QBHI899I2j59Bia89XDHPBbOB9n29b4YibaScas6GsMISRI9n8RBH600m00RS6u2T
        RaID0ErQl2P1jGGF4yy23@1mHzB84P7478IG90BS8W4fAVGi8VyAm1DwfmHBEqDJ4T2iGQ0A
        4Dm7r0qGOn80G08eWD7Q1Qaq0AeAW9_OKX22yOjdDMI0a21AeMQ5608cy8ivDTDUI0ZE1ee8
        24AMn2W0G0f1GoTrMSAG5v4aGQ0Fe01088y3ofKX5UEe6fC22eW81I8MjGw3GXy1Q8EW4_4W
        W_qGueW6QO8ZstRO00Xw4eXT5Qe604EkWXh2C8@h4IO0YWqIOiW6Q2eX_5Peo0GIg8cIVC8p
        P78119bzp12IIKaaa0K3W14IIIo_v0aaaa0D991IIGc6024aaW22Y2GIYIX8oG_Atict2T2J
        HCCzb82JJXOH336aFv3A999HI2aO9999m93oOoWSGFeXX42w_Xq0K8mf52Q8XO28811P0880
        0W00AUO3cqZWX19OZ@2g1G3;
    INTEGER CHECKSUM =4098;
ENDDATA;


PROCEDURE DO_EXIT USES GV;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $81;
    WAIT IDLE, 250 USEC;
    IRSCAN 8, $81, CAPTURE BUFF128[7..0];
    IF ( ! (BUFF128[2]==0) ) THEN GOTO Label_0;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $07;
    WAIT IDLE, 1 CYCLES;
    WAIT IDLE, 200 USEC;
    Label_0:
    IRSCAN 8, $ff;
    WAIT IDLE, 200 USEC;
    WAIT RESET, 3 CYCLES;
    EXIT STATUS;
ENDPROC;

PROCEDURE DO_READ_SECURITY USES GV;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $a4;
    WAIT IDLE, 3 CYCLES;
    DRSCAN 44, $00000000000, CAPTURE SECREG[];
    ULUWE = SECREG[ULUWE_BITLOCATION];
    ULARE = SECREG[ULARE_BITLOCATION];
    ULUPC = SECREG[ULUPC_BITLOCATION];
    ULUFE = SECREG[ULUFE_BITLOCATION];
    ULUFP = SECREG[ULUFP_BITLOCATION];
    ULUFJ = SECREG[ULUFJ_BITLOCATION];
    ULFLR = SECREG[ULFLR_BITLOCATION];
    ULULR = SECREG[ULULR_BITLOCATION];
    ULAWE = SECREG[ULAWE_BITLOCATION];
    ULARD = SECREG[ULARD_BITLOCATION];
    ULOPT[1] = SECREG[ULOPT1_BITLOCATION];
    ULOPT[0] = SECREG[ULOPT0_BITLOCATION];
ENDPROC;

PROCEDURE DO_OUTPUT_SECURITY USES GV;
    PRINT "Security Settings :";
    IF ( ! (ULUFP==1) ) THEN GOTO Label_1;
    PRINT "FlashROM Write/Erase protected by pass key.";
    Label_1:
    IF ( ! (ULUFJ==1) ) THEN GOTO Label_2;
    PRINT "FlashROM Read protected by pass key.";
    Label_2:
    IF ( ! (ULAWE==1) ) THEN GOTO Label_3;
    PRINT "Array Write/Erase protected by pass key.";
    Label_3:
    IF ( ! (ULARD==1) ) THEN GOTO Label_4;
    PRINT "Array Verify protected by pass key.";
    Label_4:
    IF ( ! (ULUFE==1) ) THEN GOTO Label_5;
    PRINT "Encrypted FlashROM Programming Enabled.";
    Label_5:
    IF ( ! (ULARE==1) ) THEN GOTO Label_6;
    PRINT "Encrypted FPGA Array Programming Enabled.";
    Label_6:
    PRINT "=========================================";
ENDPROC;

PROCEDURE DO_QUERY_SECURITY USES DO_READ_SECURITY,DO_OUTPUT_SECURITY;
    CALL DO_READ_SECURITY;
    CALL DO_OUTPUT_SECURITY;
ENDPROC;

PROCEDURE READ_UROW USES BITSTREAM,GV;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $c0;
    WAIT IDLE, 1 CYCLES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $a8;
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 165 USEC;
    DRSCAN 128, $00000000000000000000000000000000, CAPTURE UROW[];
    SUROWALGOVERSION[6..0] = $00;
    IF ( ! ( (UROW[5]==0)&&(UROW[0]==1)) ) THEN GOTO Label_7;
    SUROWALGOVERSION[5..4] = UROW[24..23];
    Label_7:
    IF ( ! ( (UROW[5]==1)&&(UROW[0]==0)) ) THEN GOTO Label_8;
    SUROWALGOVERSION[5..4] = UROW[24..23];
    SUROWALGOVERSION[6] = 1;
    Label_8:
    SUROWCHECKSUM[15..0] = UROW[127..112];
    SUROWCYCLECOUNT = INT(UROW[111..102]);
    SUROWDESIGNNAME[69..0] = UROW[101..32];
    SUROWPROGMETHOD[2..0] = UROW[31..29];
    SUROWALGOVERSION[3..0] = UROW[28..25];
    SUROW_PKG_TYPE[5..0] = UROW[22..17];
    SUROW_SW_VERSION[6..0] = UROW[16..10];
    SUROWPROGRAMSW[3..0] = UROW[9..6];
    SUROW_SRAM_DISTURB[0] = UROW[4];
    SUROW_SPEED_GRADE[2..0] = UROW[3..1];
    ACT_UROW_CYCLE_COUNT = SUROWCYCLECOUNT;
ENDPROC;

PROCEDURE FIX_INT_ARRAYS USES GV,ECCCHECK;
    IF ( ! (HEX[0]!=48) ) THEN GOTO Label_9;
    FOR I = 0 TO 7;
        TEMP = HEX[I];
        HEX[I] = HEX[(15-I)];
        HEX[(15-I)] = TEMP;
    NEXT I;
    FOR I = 0 TO 127;
        TEMP = SYNDROMETABLE[I];
        SYNDROMETABLE[I] = SYNDROMETABLE[(255-I)];
        SYNDROMETABLE[(255-I)] = TEMP;
    NEXT I;
    Label_9:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DISP_CHKSUM_DESIGN USES GV,FIX_INT_ARRAYS;
    CALL FIX_INT_ARRAYS;
    IF ( ! (INT(SUROWCHECKSUM[15..0])==65535) ) THEN GOTO Label_10;
    PRINT "CHECKSUM: ";
    Label_10:
    IF ( ! (INT(SUROWCHECKSUM[15..0])!=65535) ) THEN GOTO Label_11;
    PRINT "CHECKSUM: ",CHR$(HEX[INT(SUROWCHECKSUM[15..12])]),CHR$(HEX[INT(SUROWCHECKSUM[11..8])])
        ,CHR$(HEX[INT(SUROWCHECKSUM[7..4])]),CHR$(HEX[INT(SUROWCHECKSUM[3..0])]);
    Label_11:
    IF ( ! ( ( (INT(SUROWDESIGNNAME[0..30])==2147483647)&&(INT(SUROWDESIGNNAME[31..61])==2147483647))&&(INT(SUROWDESIGNNAME[62..69])==255)) ) THEN GOTO Label_12;
    PRINT "Design Name: ";
    Label_12:
    IF ( ! ( ( (INT(SUROWDESIGNNAME[0..30])!=2147483647)||(INT(SUROWDESIGNNAME[31..61])!=2147483647))||(INT(SUROWDESIGNNAME[62..69])!=255)) ) THEN GOTO Label_13;
    PRINT "Design Name: ",CHR$(INT(SUROWDESIGNNAME[63..69])),CHR$(INT(SUROWDESIGNNAME[56..62]))
        ,CHR$(INT(SUROWDESIGNNAME[49..55])),CHR$(INT(SUROWDESIGNNAME[42..48])),CHR$(INT(SUROWDESIGNNAME[35..41]))
        ,CHR$(INT(SUROWDESIGNNAME[28..34])),CHR$(INT(SUROWDESIGNNAME[21..27])),CHR$(INT(SUROWDESIGNNAME[14..20]))
        ,CHR$(INT(SUROWDESIGNNAME[7..13])),CHR$(INT(SUROWDESIGNNAME[0..6]));
    Label_13:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DISPLAY_UROW USES BITSTREAM,CONSTBLOCK,GV,DISP_CHKSUM_DESIGN;
    EXPORT "USER_ROW", UROW[127..0];
    PRINT "User information: ";
    CALL DISP_CHKSUM_DESIGN;
    IF ( ! (FLAGDISPLAYCYC==1) ) THEN GOTO Label_14;
    PRINT "CYCLE COUNT: ",SUROWCYCLECOUNT;
    Label_14:
    INTEGER TMPINT =INT(SUROWPROGMETHOD[]);
    INTEGER TMPINT2 =0;
    INTEGER TMPINT3 =0;
    INTEGER TMPINT4 =0;
    INTEGER TMPINT5 =0;
    IF ( ! (TMPINT==IEEE1532) ) THEN GOTO Label_15;
    PRINT "Programming Method: IEEE1532";
    Label_15:
    IF ( ! (TMPINT==STAPL) ) THEN GOTO Label_16;
    PRINT "Programming Method: STAPL";
    Label_16:
    IF ( ! (TMPINT==DIRECTC) ) THEN GOTO Label_17;
    PRINT "Programming Method: DirectC";
    Label_17:
    IF ( ! (TMPINT==PDB) ) THEN GOTO Label_18;
    PRINT "Programming Method: PDB";
    Label_18:
    IF ( ! (TMPINT==SVF) ) THEN GOTO Label_19;
    PRINT "Programming Method: SVF";
    Label_19:
    PRINT "Algorithm Version: ",INT(SUROWALGOVERSION[6..0]);
    TMPINT = INT(SUROW_SPEED_GRADE[]);
    IF ( ! (TMPINT==GRADE_UNSPEC) ) THEN GOTO Label_20;
    PRINT "Device Speed Grade: speed grade information not available from device";
    Label_20:
    IF ( ! (TMPINT==GRADE_1) ) THEN GOTO Label_21;
    PRINT "Device Speed Grade: -1";
    Label_21:
    IF ( ! (TMPINT==GRADE_2) ) THEN GOTO Label_22;
    PRINT "Device Speed Grade: -2";
    Label_22:
    IF ( ! (TMPINT==GRADE_3) ) THEN GOTO Label_23;
    PRINT "Device Speed Grade: -3";
    Label_23:
    IF ( ! (TMPINT==GRADE_F) ) THEN GOTO Label_24;
    PRINT "Device Speed Grade: -F";
    Label_24:
    IF ( ! (TMPINT==GRADE_STD) ) THEN GOTO Label_25;
    PRINT "Device Speed Grade: STD";
    Label_25:
    IF ( ! (TMPINT==GRADE_4) ) THEN GOTO Label_26;
    PRINT "Device Speed Grade: -4";
    Label_26:
    IF ( ! (TMPINT==GRADE_UNDEF) ) THEN GOTO Label_27;
    PRINT "Device Speed Grade: speed grade information not available from device";
    Label_27:
    TMPINT = INT(SUROWPROGRAMSW[]);
    IF ( ! (TMPINT==FP) ) THEN GOTO Label_28;
    PRINT "Programmer: FlashPro";
    Label_28:
    IF ( ! (TMPINT==FPLITE) ) THEN GOTO Label_29;
    PRINT "Programmer: FlashPro Lite";
    Label_29:
    IF ( ! (TMPINT==FP3) ) THEN GOTO Label_30;
    PRINT "Programmer: FlashPro3";
    Label_30:
    IF ( ! (TMPINT==FP4) ) THEN GOTO Label_31;
    PRINT "Programmer: FlashPro4";
    Label_31:
    IF ( ! (TMPINT==SCULPTW) ) THEN GOTO Label_32;
    PRINT "Programmer: Sculptor WIN";
    Label_32:
    IF ( ! (TMPINT==BPW) ) THEN GOTO Label_33;
    PRINT "Programmer: BP Programmer";
    Label_33:
    IF ( ! (TMPINT==DIRECTCP) ) THEN GOTO Label_34;
    PRINT "Programmer: DirectC";
    Label_34:
    IF ( ! (TMPINT==STP) ) THEN GOTO Label_35;
    PRINT "Programmer: Actel JAM Player";
    Label_35:
    IF ( ! ( ( ( (TMPINT==FP)||(TMPINT==FPLITE))||(TMPINT==FP3))||(TMPINT==FP4)) ) THEN GOTO Label_51;
    TMPINT2 = INT(SUROW_SW_VERSION[]);
    IF ( ! (TMPINT2==FP33) ) THEN GOTO Label_36;
    PRINT "Software: FlashPro v3.3";
    Label_36:
    IF ( ! (TMPINT2==FP34) ) THEN GOTO Label_37;
    PRINT "Software: FlashPro v3.4";
    Label_37:
    IF ( ! (TMPINT2==FP40) ) THEN GOTO Label_38;
    PRINT "Software: FlashPro v4.0";
    Label_38:
    IF ( ! (TMPINT2==FP41) ) THEN GOTO Label_39;
    PRINT "Software: FlashPro v4.1";
    Label_39:
    IF ( ! (TMPINT2==FP42) ) THEN GOTO Label_40;
    PRINT "Software: FlashPro v4.2";
    Label_40:
    IF ( ! (TMPINT2==FP50) ) THEN GOTO Label_41;
    PRINT "Software: FlashPro v5.0";
    Label_41:
    IF ( ! (TMPINT2==FP51) ) THEN GOTO Label_42;
    PRINT "Software: FlashPro v5.1";
    Label_42:
    IF ( ! (TMPINT2==FP60) ) THEN GOTO Label_43;
    PRINT "Software: FlashPro v6.0";
    Label_43:
    IF ( ! (TMPINT2==FP61) ) THEN GOTO Label_44;
    PRINT "Software: FlashPro v6.1";
    Label_44:
    IF ( ! (TMPINT2==FP62) ) THEN GOTO Label_45;
    PRINT "Software: FlashPro v6.2";
    Label_45:
    IF ( ! (TMPINT2==FP84) ) THEN GOTO Label_46;
    PRINT "Software: FlashPro v8.4";
    Label_46:
    IF ( ! (TMPINT2==FP85) ) THEN GOTO Label_47;
    PRINT "Software: FlashPro v8.5";
    Label_47:
    IF ( ! (TMPINT2==FP86) ) THEN GOTO Label_48;
    PRINT "Software: FlashPro v8.6";
    Label_48:
    IF ( ! (TMPINT2==FP90) ) THEN GOTO Label_49;
    PRINT "Software: FlashPro v9.0";
    Label_49:
    IF ( ! (TMPINT2==FP91) ) THEN GOTO NOT_FP91;
    PRINT "Software: FlashPro v9.1";
    NOT_FP91:
    IF ( ! (TMPINT2==UNKNOWN) ) THEN GOTO Label_50;
    PRINT "Software: FlashPro vX.X";
    Label_50:
    LABEL_SEPARATOR = 0;
    Label_51:
    IF ( ! ( (TMPINT==SCULPTW)||(TMPINT==BPW)) ) THEN GOTO Label_55;
    TMPINT3 = (INT(SUROW_SW_VERSION[6..5])+SCULPTORMAJORBASE);
    TMPINT4 = (INT(SUROW_SW_VERSION[4..1])+SCULPTORMINORBASE);
    TMPINT5 = 0;
    IF ( ! (SUROW_SW_VERSION[0]==1) ) THEN GOTO Label_52;
    TMPINT5 = 1;
    Label_52:
    INTEGER CURRPGM =INT(ACT_UROW_PROGRAM_SW[3..0]);
    IF ( ! (TMPINT==SCULPTW) ) THEN GOTO Label_53;
    IF ( ! ( (CURRPGM==FP3)||(CURRPGM==FP4)) ) THEN GOTO NOT_FP3_FP4;
    PRINT "NOTE: The Sculptor Windows version number below should be converted to HEX.";
    NOT_FP3_FP4:
    PRINT "Software: Sculptor Win v",TMPINT3,".",TMPINT4,".",TMPINT5;
    Label_53:
    IF ( ! (TMPINT==BPW) ) THEN GOTO Label_54;
    IF ( ! ( (CURRPGM==FP3)||(CURRPGM==FP4)) ) THEN GOTO NOT_FP3_FP4_BPW;
    PRINT "NOTE: The BP Windows version number below should be converted to HEX.";
    NOT_FP3_FP4_BPW:
    PRINT "Software: BP Win v",TMPINT3,".",TMPINT4,".",TMPINT5;
    Label_54:
    LABEL_SEPARATOR = 0;
    Label_55:
    PRINT "=========================================";
ENDPROC;

PROCEDURE CAL_PARITY USES GV,ECCCHECK;
    INTEGER COUNT =0;
    INTEGER II;
    FOR II = 0 TO 119;
        IF ( ! ( TEMPDATA[II]&&TEMPECCSTR[II]) ) THEN GOTO Label_56;
        COUNT = (COUNT+1);
        Label_56:
        LABEL_SEPARATOR = 0;
    NEXT II;
    IF ( ! ((COUNT%2)==1) ) THEN GOTO Label_57;
    TEMPPARITY = 1;
    Label_57:
    IF ( ! ((COUNT%2)==0) ) THEN GOTO Label_58;
    TEMPPARITY = 0;
    Label_58:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE CAL_ECC USES ECCCHECK,CAL_PARITY;
    TEMPECCSTR[] = ECCSTR0[];
    CALL CAL_PARITY;
    TEMPECC[0] = TEMPPARITY;
    TEMPECCSTR[] = ECCSTR1[];
    CALL CAL_PARITY;
    TEMPECC[1] = TEMPPARITY;
    TEMPECCSTR[] = ECCSTR2[];
    CALL CAL_PARITY;
    TEMPECC[2] = ( !TEMPPARITY);
    TEMPECCSTR[] = ECCSTR3[];
    CALL CAL_PARITY;
    TEMPECC[3] = ( !TEMPPARITY);
    TEMPECCSTR[] = ECCSTR4[];
    CALL CAL_PARITY;
    TEMPECC[4] = TEMPPARITY;
    TEMPECCSTR[] = ECCSTR5[];
    CALL CAL_PARITY;
    TEMPECC[5] = TEMPPARITY;
    TEMPECCSTR[] = ECCSTR6[];
    CALL CAL_PARITY;
    TEMPECC[6] = TEMPPARITY;
    TEMPECCSTR[] = ECCSTR7[];
    CALL CAL_PARITY;
    TEMPECC[7] = TEMPPARITY;
ENDPROC;

PROCEDURE ECC1_CHECKING USES GV,ECCCHECK,CAL_ECC;
    BOOLEAN READECC[8];
    BOOLEAN CALECC[8];
    BOOLEAN SYNDROME[8];
    INTEGER IERRORBIT;
    BOOLEAN BECC1VALUE;
    READECC[7..0] = BUFF128[7..0];
    TEMPDATA[119..0] = BUFF128[127..8];
    CALL CAL_ECC;
    CALECC[] = TEMPECC[];
    FOR I = 0 TO 7;
        IF ( ! (CALECC[I]!=READECC[I]) ) THEN GOTO Label_59;
        SYNDROME[I] = 1;
        Label_59:
        LABEL_SEPARATOR = 0;
    NEXT I;
    IERRORBIT = SYNDROMETABLE[INT(SYNDROME[])];
    IF ( ! ( (IERRORBIT!=-1)&&(IERRORBIT!=-99)) ) THEN GOTO Label_62;
    BECC1VALUE = BUFF128[(8+IERRORBIT)];
    IF ( ! (BECC1VALUE==1) ) THEN GOTO Label_60;
    BUFF128[(8+IERRORBIT)] = 0;
    Label_60:
    IF ( ! (BECC1VALUE==0) ) THEN GOTO Label_61;
    BUFF128[(8+IERRORBIT)] = 1;
    Label_61:
    LABEL_SEPARATOR = 0;
    Label_62:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE READ_F_ROW USES GV,ECC1_CHECKING;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $c0;
    WAIT IDLE, 1 CYCLES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $f9;
    DRSCAN 3, FADDR[];
    WAIT IDLE, 1 CYCLES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $bf;
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 165 USEC;
    DRSCAN 128, $00000000000000000000000000000000, CAPTURE BUFF128[];
    CALL ECC1_CHECKING;
ENDPROC;

PROCEDURE DO_DEVICE_INFO USES GV,READ_UROW,DISPLAY_UROW,READ_F_ROW;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $0e;
    WAIT IDLE, 1 CYCLES;
    DRSCAN 32, $00000000, CAPTURE BUFF32[];
    EXPORT "SILSIG", BUFF32[];
    IRSCAN 8, $84, CAPTURE BUFF128[7..0];
    IF ( ! (BUFF128[2]==1) ) THEN GOTO CORE_NOT_ENABLED;
    PRINT "FPGA Array is programmed and enabled.";
    CORE_NOT_ENABLED:
    IF ( ! (BUFF128[2]==0) ) THEN GOTO CORE_ENABLED;
    PRINT "FPGA Array is not enabled.";
    CORE_ENABLED:
    CALL READ_UROW;
    CALL DISPLAY_UROW;
    FADDR[] = $0;
    CALL READ_F_ROW;
    EXPORT "FSN", BUFF128[55..8];
    PRINT "=========================================";
ENDPROC;

PROCEDURE INIT_AES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $dd;
    DRSCAN 128, $00000000000000000000000000000000;
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 165 USEC;
ENDPROC;

PROCEDURE DO_VERIFY_DEVICE_INFO USES GV,BITSTREAM,DO_EXIT,DO_READ_SECURITY,READ_UROW
    ,DISP_CHKSUM_DESIGN;
    CALL READ_UROW;
    CALL DISP_CHKSUM_DESIGN;
    CALL DO_READ_SECURITY;
    BUFF32[31..0] = BOOL(CHECKSUM);
    UROW[127..112] = BUFF32[15..0];
    UROW[101..32] = ACT_UROW_DESIGN_NAME[69..0];
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $c0;
    WAIT IDLE, 1 CYCLES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $a8;
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 165 USEC;
    DRSCAN 128, $00000000000000000000000000000000,COMPARE UROW[],$ffff003fffffffffffffffff00000000
        ,PASS;
    IF ( ! (PASS==0) ) THEN GOTO UROW_CMP_OK;
    STATUS = -43;
    PRINT "Failed to verify design information.";
    UNIQUEEXITCODE = 32772;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    UROW_CMP_OK:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE READ_IDCODE_ONLY USES GV;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $0f;
    WAIT IDLE, 1 CYCLES;
    DRSCAN 32, $00000000, CAPTURE ID[];
    EXPORT "IDCODE", ID[];
ENDPROC;

PROCEDURE VERIFY_RLOCK USES GV;
    IRSCAN 8, $84,COMPARE $04,$04,PASS;
ENDPROC;

PROCEDURE DO_VERIFY_PGM_RLOCK USES GV,DO_EXIT,VERIFY_RLOCK;
    CALL VERIFY_RLOCK;
    IF ( ! (PASS==0) ) THEN GOTO RLOCK_PGM_PASS;
    STATUS = 10;
    PRINT "Failed to enable FPGA Array.";
    UNIQUEEXITCODE = 32891;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    RLOCK_PGM_PASS:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DO_VERIFY_RLOCK USES GV,DO_EXIT,VERIFY_RLOCK;
    CALL VERIFY_RLOCK;
    IF ( ! (PASS==0) ) THEN GOTO RLOCK_VERIFY_PASS;
    STATUS = 11;
    PRINT "FPGA Array is not enabled.";
    UNIQUEEXITCODE = 32892;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    RLOCK_VERIFY_PASS:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE VERIFY_IDCODE USES GV,PARAMETERS,DO_EXIT;
    FREQUENCY (FREQ*1000000);
    WAIT RESET, 5 CYCLES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $0f;
    DRSCAN 32, $00000000;
    WAIT IDLE, 1 CYCLES;
    DRSCAN 32, $00000000, CAPTURE ID[],COMPARE IDCODEVALUE[],IDMASK[],PASS;
    IF ( ! (PASS==0) ) THEN GOTO IDOK;
    STATUS = 6;
    PRINT "Failed to verify IDCODE";
    UNIQUEEXITCODE = 32797;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    IDOK:
    IDREV = INT(ID[31..28]);
    IDFAB = INT(ID[24..24]);
ENDPROC;

PROCEDURE IS_SECOK USES GV,DO_EXIT;
    IF ( ! (SECKEY_OK==0) ) THEN GOTO SECOK;
    STATUS = -35;
    PRINT "Failed to match pass key.";
    UNIQUEEXITCODE = 32799;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    SECOK:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DO_CHECK_R USES GV,DO_EXIT,DO_READ_SECURITY;
    CALL DO_READ_SECURITY;
    IF ( ! (ULARE==1) ) THEN GOTO ARRAYEPR;
    STATUS = -33;
    PRINT "FPGA Array Encryption is enforced. Plain text verification is prohibited.";
    UNIQUEEXITCODE = 32800;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    ARRAYEPR:
    IF ( ! (ULARD==1) ) THEN GOTO SKIPRCHK1;
    STATUS = -30;
    PRINT "FPGA Array Verification is protected by pass key.";
    PRINT "A valid pass key needs to be provided.";
    UNIQUEEXITCODE = 32804;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    SKIPRCHK1:
    IF ( ! (ULARD==0) ) THEN GOTO Label_63;
    CHKSEC = 0;
    Label_63:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DO_CHECK_W USES GV,DO_EXIT,DO_READ_SECURITY;
    CALL DO_READ_SECURITY;
    IF ( ! (ULAWE==1) ) THEN GOTO ARRAYWP;
    STATUS = -28;
    PRINT "FPGA Array Write/Erase is protected by pass key.";
    PRINT "A valid pass key needs to be provided.";
    UNIQUEEXITCODE = 32805;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    ARRAYWP:
    IF ( ! (ULARD==1) ) THEN GOTO ARRAYRPW;
    STATUS = -30;
    PRINT "FPGA Array Verification is protected by pass key.";
    PRINT "A valid pass key needs to be provided.";
    UNIQUEEXITCODE = 32806;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    ARRAYRPW:
    IF ( ! (ULARE==1) ) THEN GOTO ARRAYEPW;
    STATUS = -33;
    PRINT "FPGA Array Encryption is enforced. Plain text programming is prohibited.";
    CALL DO_EXIT;
    ARRAYEPW:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE BP_VER USES GV;
    BOOLEAN PLAYER_VERSION_BOOLEAN[32];
    PLAYER_VERSION_BOOLEAN[31..0] = BOOL(PLAYERVERSIONVARIABLE);
    INTEGER PLAYER_MAJOR_VERSION =(INT(PLAYER_VERSION_BOOLEAN[23..16])-SCULPTORMAJORBASE);
    INTEGER PLAYER_MINOR_VERSION =(INT(PLAYER_VERSION_BOOLEAN[15..8])-SCULPTORMINORBASE);
    ACT_UROW_SW_VERSION[6..5] = BOOL(PLAYER_MAJOR_VERSION);
    ACT_UROW_SW_VERSION[4..1] = BOOL(PLAYER_MINOR_VERSION);
    ACT_UROW_SW_VERSION[0] = PLAYER_VERSION_BOOLEAN[0];
    ACT_UROW_PROGRAM_SW[3..0] = BOOL(PLAYERVERSIONSWVARIABLE);
ENDPROC;

PROCEDURE POLL_PROGRAM USES GV;
    INTEGER ILOOP_0;
    FOR ILOOP_0 = 16381 - 1 TO 0 STEP -1;
        IRSTOP IRPAUSE;
        DRSTOP DRPAUSE;
        IRSCAN 8, $84;
        WAIT IDLE, 1 CYCLES;
        WAIT IDLE, 100 USEC;
        DRSCAN 5, $00,COMPARE $00,$0b,PASS;
        IF PASS THEN ILOOP_0 = 0;
    NEXT ILOOP_0;
ENDPROC;

PROCEDURE SET_PRG_ARRAY USES GV;
    ISPRGARRAY = 1;
ENDPROC;

PROCEDURE DO_INITIALIZE USES GV,DO_EXIT,READ_F_ROW,DO_CHECK_R,DO_CHECK_W,BP_VER;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $7f;
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 50 USEC;
    BSR[350..0] = BSRPATTERN[350..0];
    BOOLEAN SHIFT_DATA[351];
    IRSCAN 8, $01;
    DRSCAN 351, BSR[];
    WAIT IDLE, 1 CYCLES;
    DRSCAN 351, SHIFT_DATA[], CAPTURE SAMPLE_DEVICE[];
    FOR I = 0 TO 350;
        IF ( ! (SAMPLEMASK[I]==1) ) THEN GOTO Label_64;
        BSR[I] = SAMPLE_DEVICE[I];
        Label_64:
        LABEL_SEPARATOR = 0;
    NEXT I;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $01;
    DRSCAN 351, BSR[];
    WAIT IDLE, 1 CYCLES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $c0;
    WAIT IDLE, 1 CYCLES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $80;
    DRSCAN 18, $00000;
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 1875 USEC;
    DRSCAN 18, $00000, CAPTURE ISC_CONFIG_RESULT[],COMPARE $30000,$30000,PASS;
    IF ( ! (PASS==0) ) THEN GOTO CRCOK;
    STATUS = 5;
    PRINT "Failed to enter programming mode.";
    EXPORT "ISC_Config_Result", ISC_CONFIG_RESULT[];
    UNIQUEEXITCODE = 32850;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    CRCOK:
    FADDR[] = $0;
    CALL READ_F_ROW;
    EXPORT "FSN", BUFF128[55..8];
    IF ( ! (CHKARRAY==1) ) THEN GOTO SKIPCHKARRAY;
    IF ( ! (ARRAYRONLY==0) ) THEN GOTO Label_65;
    CALL DO_CHECK_W;
    Label_65:
    IF ( ! (ARRAYRONLY==1) ) THEN GOTO Label_66;
    CALL DO_CHECK_R;
    Label_66:
    LABEL_SEPARATOR = 0;
    SKIPCHKARRAY:
    IF ( ! (PLAYERVERSIONVARIABLE!=0) ) THEN GOTO Label_67;
    CALL BP_VER;
    Label_67:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE READ_INITIALIZE USES GV,DO_INITIALIZE;
    CHKFROM = 0;
    CHKARRAY = 0;
    CHKNVM = 0;
    CHKSEC = 0;
    CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE NW_INITIALIZE_COMMON USES GV;
    CHKFROM = 0;
    CHKARRAY = 0;
ENDPROC;

PROCEDURE NW_INITIALIZE USES DO_INITIALIZE,NW_INITIALIZE_COMMON;
    CALL NW_INITIALIZE_COMMON;
    CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE NR_INITIALIZE_COMMON USES GV;
    CHKFROM = 0;
    CHKARRAY = 0;
ENDPROC;

PROCEDURE NR_INITIALIZE USES DO_INITIALIZE,NR_INITIALIZE_COMMON;
    CALL NR_INITIALIZE_COMMON;
    CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE AW_INITIALIZE USES GV,DO_INITIALIZE;
    ARRAYRONLY = 0;
    CHKFROM = 0;
    CHKARRAY = 1;
    CHKNVM = 0;
    CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE AR_INITIALIZE USES GV,DO_INITIALIZE;
    ARRAYRONLY = 1;
    CHKFROM = 0;
    CHKARRAY = 1;
    CHKNVM = 0;
    CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE W_INITIALIZE USES GV,DO_INITIALIZE;
    ARRAYRONLY = 0;
    CHKARRAY = 1;
    CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE R_INITIALIZE USES GV,DO_INITIALIZE;
    ARRAYRONLY = 1;
    CHKARRAY = 1;
    CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE INITIALIZE USES GV,DO_INITIALIZE;
    ARRAYRONLY = 0;
    FROMRONLY = 0;
    CHKFROM = 1;
    CHKARRAY = 1;
    CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE POLL_ERASE USES GV;
    PASS = 0;
    INTEGER ILOOP_1;
    FOR ILOOP_1 = 262141 - 1 TO 0 STEP -1;
        IRSTOP IRPAUSE;
        DRSTOP DRPAUSE;
        IRSCAN 8, $84;
        WAIT IDLE, 1 CYCLES;
        WAIT IDLE, 1000 USEC;
        DRSCAN 5, $00,COMPARE $00,$03,PASS;
        IF PASS THEN ILOOP_1 = 0;
    NEXT ILOOP_1;
ENDPROC;

PROCEDURE UFROM_DISTURB USES GV;
    FOR FROMROWNUMBER = NUMBEROFFROMROWS TO 1 STEP -1;
        IRSTOP IRPAUSE;
        DRSTOP DRPAUSE;
        IRSCAN 8, $9f;
        DRSCAN 3, BOOL((FROMROWNUMBER-1));
        WAIT IDLE, 1 CYCLES;
        IRSTOP IRPAUSE;
        DRSTOP DRPAUSE;
        IRSCAN 8, $9b;
        DRSCAN 128, $ffffffffffffffffffffffffffffffff;
        WAIT IDLE, 5 CYCLES;
        WAIT IDLE, 10000 USEC;
    NEXT FROMROWNUMBER;
ENDPROC;

PROCEDURE PROGRAM_UROW USES GV,BITSTREAM,DO_EXIT,POLL_PROGRAM;
    IF ( ! (ISERASEONLY==0) ) THEN GOTO SKIP_CYC_INCREMENT;
    IF ( ! (ISPRGARRAY==1) ) THEN GOTO NOT_PGM_ARRAY;
    IF ( ! ( ( ( (INT(UROW[31..0])==-1)&&(INT(UROW[63..32])==-1))&&(INT(UROW[95..64])==-1))&&(INT(UROW[127..96])==-1)) ) THEN GOTO NOT_CORRUPTED_CYCLE_COUNT;
    ACT_UROW_CYCLE_COUNT = 0;
    NOT_CORRUPTED_CYCLE_COUNT:
    IF ( ! (ACT_UROW_CYCLE_COUNT<1000) ) THEN GOTO MAX_CYCLE_COUNT;
    ACT_UROW_CYCLE_COUNT = (ACT_UROW_CYCLE_COUNT+1);
    MAX_CYCLE_COUNT:
    LABEL_SEPARATOR = 0;
    NOT_PGM_ARRAY:
    LABEL_SEPARATOR = 0;
    SKIP_CYC_INCREMENT:
    IF ( ! (ISERASEONLY==1) ) THEN GOTO Label_68;
    UROW[] = $ffffffffffffffffffffffffffffffff;
    Label_68:
    IF ( ! ( (ISERASEONLY==0)||(ISRESTOREDESIGN==1)) ) THEN GOTO SKIP_DESIGN_INFO;
    BUFF32[31..0] = BOOL(CHECKSUM);
    IF ( ! ( !ISRESTOREDESIGN) ) THEN GOTO Label_69;
    UROW[127..112] = BUFF32[15..0];
    Label_69:
    IF ( ! ISRESTOREDESIGN ) THEN GOTO Label_70;
    UROW[127..112] = SUROWCHECKSUM[15..0];
    Label_70:
    IF ( ! ( !ISRESTOREDESIGN) ) THEN GOTO Label_71;
    UROW[101..32] = ACT_UROW_DESIGN_NAME[69..0];
    Label_71:
    IF ( ! ISRESTOREDESIGN ) THEN GOTO Label_72;
    UROW[101..32] = SUROWDESIGNNAME[69..0];
    Label_72:
    LABEL_SEPARATOR = 0;
    SKIP_DESIGN_INFO:
    BUFF32[31..0] = BOOL(ACT_UROW_CYCLE_COUNT);
    UROW[111..102] = BUFF32[9..0];
    UROW[31..29] = ACT_UROW_PROG_METHOD[2..0];
    UROW[28..25] = ACT_UROW_ALGO_VERSION[3..0];
    UROW[16..10] = ACT_UROW_SW_VERSION[6..0];
    UROW[9..6] = ACT_UROW_PROGRAM_SW[3..0];
    UROW[4] = SUROW_SRAM_DISTURB[0];
    IF ( ! (ACT_UROW_ALGO_VERSION[6]==1) ) THEN GOTO Label_73;
    UROW[5] = 1;
    UROW[0] = 0;
    UROW[24..23] = ACT_UROW_ALGO_VERSION[5..4];
    Label_73:
    IF ( ! (ACT_UROW_ALGO_VERSION[6]==0) ) THEN GOTO Label_74;
    UROW[5] = 0;
    UROW[0] = 1;
    UROW[24..23] = ACT_UROW_ALGO_VERSION[5..4];
    Label_74:
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $a7;
    DRSCAN 128, UROW[];
    WAIT IDLE, 15 CYCLES;
    CALL POLL_PROGRAM;
    IF ( ! (PASS==0) ) THEN GOTO PROGRAM_OK3;
    STATUS = -24;
    PRINT "Failed to program UROW";
    UNIQUEEXITCODE = 32853;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    PROGRAM_OK3:
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $c0;
    WAIT IDLE, 1 CYCLES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $a8;
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 165 USEC;
    DRSCAN 128, $00000000000000000000000000000000,COMPARE UROW[],UROW_MASK[],PASS;
    IF ( ! (PASS==0) ) THEN GOTO UROW_OK;
    STATUS = -24;
    PRINT "Failed to program UROW";
    UNIQUEEXITCODE = 32854;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    UROW_OK:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE FAIL_ERASE USES GV,DO_EXIT;
    STATUS = 8;
    PRINT "Failed Erase Operation";
    UNIQUEEXITCODE = 32855;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
ENDPROC;

PROCEDURE EXE_ERASE USES BITSTREAM,GV,READ_UROW,POLL_ERASE,PROGRAM_UROW,FAIL_ERASE;
    IF ( ! (COMBERASESELECT[14]==1) ) THEN GOTO SKIPRUROW;
    CALL READ_UROW;
    EXPORT "ACTEL_SLOG_UROW", UROW[];
    SKIPRUROW:
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $85;
    DRSCAN 23, COMBERASESELECT[];
    WAIT IDLE, 3 CYCLES;
    CALL POLL_ERASE;
    IF ( ! (PASS==0) ) THEN GOTO ERASEOK;
    CALL FAIL_ERASE;
    ERASEOK:
    IF ( ! (COMBERASESELECT[14]==1) ) THEN GOTO Label_75;
    CALL PROGRAM_UROW;
    Label_75:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DO_ERASE USES GV,EXE_ERASE;
    PRINT "Erase ...";
    COMBERASESELECT[22..0] = $004000;
    COMBERASESELECT[0] = 1;
    CALL EXE_ERASE;
    PRINT "Completed erase";
ENDPROC;

PROCEDURE DO_ERASE_ARRAY USES GV,EXE_ERASE;
    PRINT "Erase FPGA Array ...";
    COMBERASESELECT[22..0] = $004001;
    CALL EXE_ERASE;
ENDPROC;

PROCEDURE DO_ERASE_ONLY USES GV,DO_ERASE;
    ISERASEONLY = 1;
    CALL DO_ERASE;
ENDPROC;

PROCEDURE DO_ERASE_ARRAY_ONLY USES GV,DO_ERASE_ARRAY;
    ISERASEONLY = 1;
    CALL DO_ERASE_ARRAY;
ENDPROC;

PROCEDURE DO_ERASE_ALL USES GV,UFROM_DISTURB,EXE_ERASE;
    IF ( ! ( (BM7DEVICE==1)||(BM1DEVICE==1)) ) THEN GOTO Label_76;
    PRINT "Erase FPGA Array and FlashROM ...";
    Label_76:
    IF ( ! ( (BM7DEVICE!=1)&&(BM1DEVICE!=1)) ) THEN GOTO Label_77;
    PRINT "Erase FPGA Array, FlashROM and Security Settings ...";
    Label_77:
    COMBERASESELECT[22..0] = $7fc00f;
    ISERASEONLY = 1;
    CALL EXE_ERASE;
    CALL UFROM_DISTURB;
ENDPROC;

PROCEDURE LOAD_ROW_DATA USES BITSTREAM,GV;
    FOR SDTILE = 1 TO NUMBEROFSDTILES;
        FOR I = 1 TO 8;
            IRSTOP IRPAUSE;
            DRSTOP DRPAUSE;
            IRSCAN 8, $89;
            DRSCAN 26, DATASTREAM[(DATAINDEX+25)..DATAINDEX];
            WAIT IDLE, 3 CYCLES;
            DATAINDEX = (DATAINDEX+26);
        NEXT I;
    NEXT SDTILE;
ENDPROC;

PROCEDURE EXE_PROGRAM USES GV,DO_EXIT,POLL_PROGRAM;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $83;
    WAIT IDLE, 3 CYCLES;
    CALL POLL_PROGRAM;
    IF ( ! (PASS==0) ) THEN GOTO Label_78;
    STATUS = 10;
    PRINT "Failed to program FPGA array at row ",ROWNUMBER,".";
    UNIQUEEXITCODE = 32856;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    Label_78:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE EXE_VERIFY USES GV,DO_EXIT,POLL_PROGRAM;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $8d;
    DRSCAN 2, VERIFYEOL[];
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 132 USEC;
    CALL POLL_PROGRAM;
    IF ( ! (PASS==0) ) THEN GOTO Label_79;
    STATUS = 11;
    PRINT "Verify 0 failed at row ",ROWNUMBER,".";
    UNIQUEEXITCODE = 32857;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    Label_79:
    IRSCAN 8, $8d;
    DRSCAN 2, VERIFYEOL[],COMPARE $0,$3,PASS;
    IF ( ! (PASS==0) ) THEN GOTO Label_80;
    STATUS = 11;
    PRINT "Verify 0 failed at row ",ROWNUMBER,".";
    UNIQUEEXITCODE = 32858;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    Label_80:
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $8e;
    DRSCAN 2, VERIFYEOL[];
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 132 USEC;
    CALL POLL_PROGRAM;
    IF ( ! (PASS==0) ) THEN GOTO Label_81;
    STATUS = 11;
    PRINT "Verify 1 failed at row ",ROWNUMBER,".";
    UNIQUEEXITCODE = 32859;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    Label_81:
    IRSCAN 8, $8e;
    DRSCAN 2, VERIFYEOL[],COMPARE $0,$3,PASS;
    IF ( ! (PASS==0) ) THEN GOTO Label_82;
    STATUS = 11;
    PRINT "Verify 1 failed at row ",ROWNUMBER,".";
    UNIQUEEXITCODE = 32860;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    Label_82:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DO_PROGRAM USES GV,LOAD_ROW_DATA,EXE_PROGRAM;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $87;
    DRSCAN 2, $2;
    WAIT IDLE, 3 CYCLES;
    PRINT "Programming FPGA Array";
    DATAINDEX = 0;
    ROWNUMBER = (NUMBEROFMAPROWS-1);
    INTEGER IREPEAT_0;
    FOR IREPEAT_0 = NUMBEROFMAPROWS - 1 TO 0 STEP -1;
        CALL LOAD_ROW_DATA;
        CALL EXE_PROGRAM;
        IRSTOP IRPAUSE;
        DRSTOP DRPAUSE;
        IRSCAN 8, $87;
        DRSCAN 2, $3;
        WAIT IDLE, 3 CYCLES;
        IF ( ! ((ROWNUMBER%ROWITERATION)==0) ) THEN GOTO Label_83;
        PERCENT_UPDATE = ((100*((NUMBEROFMAPROWS-ROWNUMBER)+1))/NUMBEROFMAPROWS);
        DIFFERENCE = (PERCENT_UPDATE%10);
        IF ( ! (DIFFERENCE>=5) ) THEN GOTO ROUND_DOWN_PGM_A;
        PERCENT_UPDATE = (PERCENT_UPDATE+(10-DIFFERENCE));
        ROUND_DOWN_PGM_A:
        IF ( ! (DIFFERENCE<5) ) THEN GOTO ROUND_UP_PGM_A;
        PERCENT_UPDATE = (PERCENT_UPDATE-DIFFERENCE);
        ROUND_UP_PGM_A:
        EXPORT "PERCENT_DONE", PERCENT_UPDATE;
        Label_83:
        ROWNUMBER = (ROWNUMBER-1);
    NEXT IREPEAT_0;
ENDPROC;

PROCEDURE DO_VERIFY USES GV,LOAD_ROW_DATA,EXE_VERIFY;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $87;
    DRSCAN 2, $2;
    WAIT IDLE, 3 CYCLES;
    PRINT "Verifying FPGA Array";
    DATAINDEX = 0;
    ROWNUMBER = (NUMBEROFMAPROWS-1);
    INTEGER IREPEAT_1;
    FOR IREPEAT_1 = NUMBEROFMAPROWS - 1 TO 0 STEP -1;
        CALL LOAD_ROW_DATA;
        CALL EXE_VERIFY;
        IRSTOP IRPAUSE;
        DRSTOP DRPAUSE;
        IRSCAN 8, $87;
        DRSCAN 2, $3;
        WAIT IDLE, 3 CYCLES;
        IF ( ! ((ROWNUMBER%ROWITERATION)==0) ) THEN GOTO Label_84;
        PERCENT_UPDATE = ((100*((NUMBEROFMAPROWS-ROWNUMBER)+1))/NUMBEROFMAPROWS);
        DIFFERENCE = (PERCENT_UPDATE%10);
        IF ( ! (DIFFERENCE>=5) ) THEN GOTO ROUND_DOWN_VER_ARRAY;
        PERCENT_UPDATE = (PERCENT_UPDATE+(10-DIFFERENCE));
        ROUND_DOWN_VER_ARRAY:
        IF ( ! (DIFFERENCE<5) ) THEN GOTO ROUND_UP_VER_ARRAY;
        PERCENT_UPDATE = (PERCENT_UPDATE-DIFFERENCE);
        ROUND_UP_VER_ARRAY:
        EXPORT "PERCENT_DONE", PERCENT_UPDATE;
        Label_84:
        ROWNUMBER = (ROWNUMBER-1);
    NEXT IREPEAT_1;
    PRINT "        Verifying FPGA Array -- pass";
ENDPROC;

PROCEDURE DO_VERIFY_BOL USES GV,DO_VERIFY;
    VERIFYEOL[0] = 0;
    CALL DO_VERIFY;
ENDPROC;

PROCEDURE DO_VERIFY_EOL USES GV,DO_VERIFY;
    VERIFYEOL[0] = 1;
    CALL DO_VERIFY;
ENDPROC;

PROCEDURE DO_PROGRAM_RLOCK USES GV,DO_EXIT,POLL_PROGRAM;
    DATAINDEX = 0;
    INTEGER IREPEAT_2;
    FOR IREPEAT_2 = NUMBEROFSDTILES - 1 TO 0 STEP -1;
        FOR I = 1 TO 8;
            IRSTOP IRPAUSE;
            DRSTOP DRPAUSE;
            IRSCAN 8, $89;
            DRSCAN 26, RLOCK[(DATAINDEX+25)..DATAINDEX];
            WAIT IDLE, 3 CYCLES;
            DATAINDEX = (DATAINDEX+26);
        NEXT I;
    NEXT IREPEAT_2;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $8c;
    WAIT IDLE, 3 CYCLES;
    CALL POLL_PROGRAM;
    IF ( ! (PASS==0) ) THEN GOTO Label_85;
    STATUS = 10;
    PRINT "Failed to enable FPGA Array.";
    UNIQUEEXITCODE = 32862;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    Label_85:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DO_READ_IDCODE USES READ_IDCODE_ONLY;
    WAIT RESET, 5 CYCLES;
    CALL READ_IDCODE_ONLY;
    EXIT 0;
ENDPROC;


CRC AD1C;
